#!/usr/bin/env node

'use strict';

const reformatReadmeDoc = require('../lib/reformat-table.js');

const {Command} = require('commander')
const glob = require('glob')
const program = new Command()
const fs = require('fs')

program
  .version(require('../package').version)
  .usage('[options] <files|directories|globs>')
  .showHelpAfterError()
  // 放defaultValue，就显示不出正确的格式，"会被转义 \"，而且只会默认存在
  .option('-R, --reformat [type]', 'check another rules and reformat markdown table, ' +
    '(default: {"0": 0, "1": 2, "2": 3, "3": 5})')
  .option('-C, --cat', 'only cat format markdown content', false)

function handler() {
  program.parse()
  const opts = program.opts()

  if (program.args.length === 0) {
    return program.help()
  }

  if (!opts.cat) {
    console.log(`Welcome to reformat-markdown-table! version: ${require('../package').version}\n`)
  }

  const fileList = program.args.flatMap(x => glob.sync(x))

  let formatString = ''

  // 自定义格式
  if (opts.reformat) {
    formatString = opts.reformat === true ? '' : opts.reformat
  }

  fileList.forEach(item => {
    const content = fs.readFileSync(item).toString('utf-8')
    const result = reformatReadmeDoc(content, formatString)
    if (opts.cat) {
      console.log(result)
    } else {
      fs.writeFileSync(item, result)
    }
  })
}

handler()
